{"ast":null,"code":"var _jsxFileName = \"/Users/bzhang99/Desktop/upenn/2020fall/CIS450/HW2/hw2/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      name: [],\n      movies: []\n    };\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      console.log(\"hello\"); //let h = 'hello';\n\n      let genreDivs = genreList.map((genreObj, i) => /*#__PURE__*/React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.name,\n        onClick: () => this.showMovies(genreObj.name),\n        name: genreObj.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    // console.log(\"YOYOYOYO\");\n    let route = \"http://localhost:8081/genres/\" + genre;\n    console.log(route);\n    fetch(route, {\n      method: 'GET'\n    }).then(res => res.json()).then(movieList => {\n      if (!movieList) return;\n      console.log(\"movies received\");\n      console.log(movieList);\n      let movieDivs = movieList.map((movieObj, i) =>\n      /*#__PURE__*/\n      //console.log(movieObj.title)\n      React.createElement(DashboardMovieRow, {\n        title: movieObj.title,\n        rating: movieObj.rating,\n        votes: movieObj.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }));\n      console.log(movieDivs);\n      this.setState({\n        movies: movieDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Top Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, this.state.genres)), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 2,\n      initialCenter: {\n        lat: 20,\n        lng: -10\n      },\n      containerStyle: containerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      title: 'Sample Country 1',\n      name: 'Sample Country 1',\n      position: {\n        lat: 40,\n        lng: -90\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.selectedMarker,\n      visible: this.state.displayWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, this.state.currentPlace.name))), /*#__PURE__*/React.createElement(Marker, {\n      title: 'Sample Country 2',\n      name: 'Sample Country 2',\n      position: {\n        lat: 52,\n        lng: 20\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.selectedMarker,\n      visible: this.state.displayWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, this.state.currentPlace.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 44\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"Rating\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, \"Vote Count\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, this.state.movies)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/bzhang99/Desktop/upenn/2020fall/CIS450/HW2/hw2/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","name","movies","showMovies","bind","componentDidMount","fetch","method","then","res","json","genreList","console","log","genreDivs","map","genreObj","i","setState","genres","catch","err","genre","route","movieList","movieDivs","movieObj","title","rating","vote_count","render","google","lat","lng","containerStyle","onMarkerClick","onInfoWindowClose","selectedMarker","displayWindow","currentPlace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD,GAZoD,CAcrD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,KAD4B,CACtB;;AADsB,KAAjC,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAG2B;AAH3B,KAIGF,IAJH,CAIQG,SAAS,IAAI;AACjB,UAAI,CAACA,SAAL,EAAgB,OADC,CAEjB;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAJiB,CAKjB;;AACA,UAAIC,SAAS,GAAGH,SAAS,CAACI,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,kBAC5B,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAE,YAAYD,QAAQ,CAACf,IAAtC;AAA4C,QAAA,OAAO,EAAE,MAAM,KAAKE,UAAL,CAAgBa,QAAQ,CAACf,IAAzB,CAA3D;AAA2F,QAAA,IAAI,EAAEe,QAAQ,CAACf,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc,CAAhB,CANiB,CAUjB;;AACA,WAAKiB,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEL;AADI,OAAd;AAGD,KAlBH,EAmBGM,KAnBH,CAmBSC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAnBhB,EAFkB,CAqBgB;AACnC;AAGD;;AACA;;;AACAlB,EAAAA,UAAU,CAACmB,KAAD,EAAQ;AAChB;AACA,QAAIC,KAAK,GAAG,kCAAkCD,KAA9C;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACAjB,IAAAA,KAAK,CAACiB,KAAD,EAAQ;AACXhB,MAAAA,MAAM,EAAE;AADG,KAAR,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQgB,SAAS,IAAI;AACjB,UAAI,CAACA,SAAL,EAAgB;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;AACA,UAAIC,SAAS,GAAGD,SAAS,CAACT,GAAV,CAAc,CAACW,QAAD,EAAWT,CAAX;AAAA;AAC5B;AACA,0BAAC,iBAAD;AAAmB,QAAA,KAAK,EAAES,QAAQ,CAACC,KAAnC;AAA0C,QAAA,MAAM,EAAED,QAAQ,CAACE,MAA3D;AAAmE,QAAA,KAAK,EAAEF,QAAQ,CAACG,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFc,CAAhB;AAKAjB,MAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ;AAEA,WAAKP,QAAL,CAAc;AACZhB,QAAAA,MAAM,EAAEuB;AADI,OAAd;AAID,KAnBH,EAmBKL,KAnBL,CAmBWC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAnBlB;AAoBD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9B,KAAL,CAAWmB,MADd,CAFF,CADF,eAQI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWgC,MAAxB;AAAgC,MAAA,IAAI,EAAE,CAAtC;AAAyC,MAAA,aAAa,EAAE;AAChDC,QAAAA,GAAG,EAAE,EAD2C;AAEhDC,QAAAA,GAAG,EAAE,CAAC;AAF0C,OAAxD;AAGO,MAAA,cAAc,EAAEC,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIQ,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,kBADX;AAEI,MAAA,IAAI,EAAE,kBAFV;AAGI,MAAA,QAAQ,EAAE;AAACF,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,GAAG,EAAE,CAAC;AAAhB,OAHd;AAII,MAAA,OAAO,EAAE,KAAKE,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,eAUQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKC,iBAA1B;AAA6C,MAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWqC,cAAhE;AAAgF,MAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWsC,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKtC,KAAL,CAAWuC,YAAX,CAAwBtC,IAA7B,CADJ,CADJ,CAVR,eAgBQ,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,kBADX;AAEI,MAAA,IAAI,EAAE,kBAFV;AAGI,MAAA,QAAQ,EAAE;AAAC+B,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,GAAG,EAAE;AAAf,OAHd;AAII,MAAA,OAAO,EAAE,KAAKE,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBR,eAsBQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKC,iBAA1B;AAA6C,MAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWqC,cAAhE;AAAgF,MAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWsC,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKtC,KAAL,CAAWuC,YAAX,CAAwBtC,IAA7B,CADJ,CADJ,CAtBR,CARJ,eAqCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxB,CAFF,eAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,CAHF,CADF,eAME;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,EAAE,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,MADd,CANF,CADF,CArCF,CALF,CADF;AA0DD;;AA/HoD","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      name: [],\n      movies: []\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(genreList => {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        console.log(\"hello\");\n        //let h = 'hello';\n        let genreDivs = genreList.map((genreObj, i) =>\n          <GenreButton id={\"button-\" + genreObj.name} onClick={() => this.showMovies(genreObj.name)} name={genreObj.name} />\n        );\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs\n        })\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    // console.log(\"YOYOYOYO\");\n    let route = \"http://localhost:8081/genres/\" + genre;\n    console.log(route);\n    fetch(route, {\n      method: 'GET'\n    })\n      .then(res => res.json())\n      .then(movieList => {\n        if (!movieList) return;\n        console.log(\"movies received\");\n        console.log(movieList);\n        let movieDivs = movieList.map((movieObj, i) =>\n          //console.log(movieObj.title)\n          <DashboardMovieRow title={movieObj.title} rating={movieObj.rating} votes={movieObj.vote_count} />\n        );\n\n        console.log(movieDivs);\n\n        this.setState({\n          movies: movieDivs\n        })\n\n      }).catch(err => console.log(err))\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top Movies</div>\n            <div className=\"genres-container\">\n              {this.state.genres}\n            </div>\n          </div>\n\n            <Map google={this.props.google} zoom={2} initialCenter={{\n                    lat: 20,\n                    lng: -10\n                }} containerStyle={containerStyle}>\n                    <Marker \n                        title={'Sample Country 1'}\n                        name={'Sample Country 1'}\n                        position={{lat: 40, lng: -90}}\n                        onClick={this.onMarkerClick} />\n            \n                    <InfoWindow onClose={this.onInfoWindowClose} marker={this.state.selectedMarker} visible={this.state.displayWindow}>\n                        <div>\n                            <h1>{this.state.currentPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n\n                    <Marker \n                        title={'Sample Country 2'}\n                        name={'Sample Country 2'}\n                        position={{lat: 52, lng: 20}}\n                        onClick={this.onMarkerClick} />\n            \n                    <InfoWindow onClose={this.onInfoWindowClose} marker={this.state.selectedMarker} visible={this.state.displayWindow}>\n                        <div>\n                            <h1>{this.state.currentPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n                </Map>\n                \n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}