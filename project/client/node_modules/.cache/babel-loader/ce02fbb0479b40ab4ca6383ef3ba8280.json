{"ast":null,"code":"var _jsxFileName = \"/Users/bzhang99/Desktop/upenn/2020fall/CIS450/HW2/hw2/client/src/components/Map.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nexport class MapPage extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains\n\n    this.state = {\n      countries: [],\n      selectedCountry1: \"\",\n      selectedCountry2: \"\"\n    };\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/countries\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(countryList => {\n      if (!countryList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        countries: countryList\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  handleChange1(e) {\n    this.setState({\n      selectedCountry1: e.target.value\n    });\n  }\n\n  handleChange2(e) {\n    this.setState({\n      selectedCountry2: e.target.value\n    });\n  } // render() {\n  //     return (\n  //         <div className=\"Map\">\n  //             <PageNavbar active=\"map\" />\n  //             <button id=\"submitButton\" className=\"submit-button\" onClick={this.initMap}>Submit</button>\n  //                 <div id=\"map\">\n  //                     <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4uWVv0o6wzhqyPCf5H6BnRFbNfU79KqM&callback=initMap\"\n  //                         async defer>\n  //                     </script>\n  //                     <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\" />\n  //                     <script src=\"./Map.js\"></script>\n  //                 </div>\n  //             <body>\n  //                 <h3>Map:</h3>\n  //                 <div id=\"map\"></div>\n  //             </body>\n  //         </div>\n  //     );\n  // }\n\n\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '60%',\n  height: '60%'\n};\nconst divStyle = {\n  display: 'flex',\n  alignItems: 'center'\n};\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      conflicts: {},\n      selectedConflict: \"\",\n      displayWindow: true,\n      selectedMarker: {},\n      currentPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      displayWindow: true,\n      selectedMarker: marker,\n      currentPlace: props\n    });\n  }\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/conflicts\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(conflictList => {\n      if (!conflictList) return; // Map each countryObj in countryList to an HTML element:       \n\n      let conflictDivs = conflictList.map((conflictObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        label: conflictObj.country,\n        value: conflictObj.country,\n        onClick: () => this.handleChange1(conflictObj),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        countries: conflictDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  handleChange1(e) {\n    this.setState({\n      selectedConflict: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdowns-container\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countryDropdown1-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedConflict,\n      onChange: this.handleChange1,\n      className: \"dropdown\",\n      id: \"countryDropdown1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \" -- Select A Conflict -- \"), this.state.conflicts), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"decadesSubmitBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 2,\n      initialCenter: {\n        lat: 20,\n        lng: -10\n      },\n      containerStyle: containerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      title: 'Sample Country 1',\n      name: 'Sample Country 1',\n      position: {\n        lat: 40,\n        lng: -90\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.selectedMarker,\n      visible: this.state.displayWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, this.state.currentPlace.name))), /*#__PURE__*/React.createElement(Marker, {\n      title: 'Sample Country 2',\n      name: 'Sample Country 2',\n      position: {\n        lat: 52,\n        lng: 20\n      },\n      onClick: this.onMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      onClose: this.onInfoWindowClose,\n      marker: this.state.selectedMarker,\n      visible: this.state.displayWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, this.state.currentPlace.name)))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyC4uWVv0o6wzhqyPCf5H6BnRFbNfU79KqM\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/bzhang99/Desktop/upenn/2020fall/CIS450/HW2/hw2/client/src/components/Map.js"],"names":["React","PageNavbar","Map","InfoWindow","Marker","GoogleApiWrapper","MapPage","Component","constructor","props","state","countries","selectedCountry1","selectedCountry2","componentDidMount","fetch","method","then","res","json","countryList","setState","catch","err","console","log","handleChange1","e","target","value","handleChange2","containerStyle","position","width","height","divStyle","display","alignItems","MapContainer","conflicts","selectedConflict","displayWindow","selectedMarker","currentPlace","onMarkerClick","marker","conflictList","conflictDivs","map","conflictObj","i","country","render","google","lat","lng","onInfoWindowClose","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,QAAwD,mBAAxD;AAEA,OAAO,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACE,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,gBAAgB,EAAE,EAFT;AAGTC,MAAAA,gBAAgB,EAAE;AAHT,KAAb;AAMH,GAXwC,CAazC;;;AACFC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,MAAAA,MAAM,EAAE,KAD+B,CACzB;;AADyB,KAApC,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAG2B;AAH3B,KAIGF,IAJH,CAIQG,WAAW,IAAI;AACnB,UAAI,CAACA,WAAL,EAAkB,OADC,CAEnB;AACA;AAGA;;AACA,WAAKC,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAES;AADC,OAAd;AAGD,KAdH,EAeGE,KAfH,CAeSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfhB,EAFkB,CAiBkB;AACrC;;AAEDG,EAAAA,aAAa,CAACC,CAAD,EAAI;AACf,SAAKN,QAAL,CAAc;AACVT,MAAAA,gBAAgB,EAAEe,CAAC,CAACC,MAAF,CAASC;AADjB,KAAd;AAGD;;AAEDC,EAAAA,aAAa,CAACH,CAAD,EAAI;AACf,SAAKN,QAAL,CAAc;AACVR,MAAAA,gBAAgB,EAAEc,CAAC,CAACC,MAAF,CAASC;AADjB,KAAd;AAGD,GA5C0C,CA8C7C;AACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlEyC;AA0E7C,MAAME,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,UADS;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAAvB;AAMA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAE,MADI;AAEbC,EAAAA,UAAU,EAAE;AAFC,CAAjB;AAKA,OAAO,MAAMC,YAAN,SAA2BtC,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAE9CG,KAF8C,GAEvC;AACH6B,MAAAA,SAAS,EAAE,EADR;AAEHC,MAAAA,gBAAgB,EAAE,EAFf;AAIHC,MAAAA,aAAa,EAAE,IAJZ;AAKHC,MAAAA,cAAc,EAAE,EALb;AAMHC,MAAAA,YAAY,EAAE;AANX,KAFuC;;AAAA,SAuC9CC,aAvC8C,GAuC9B,CAACnC,KAAD,EAAQoC,MAAR,EAAgBlB,CAAhB,KACZ,KAAKN,QAAL,CAAc;AACVoB,MAAAA,aAAa,EAAE,IADL;AAEVC,MAAAA,cAAc,EAAEG,MAFN;AAGVF,MAAAA,YAAY,EAAElC;AAHJ,KAAd,CAxC0C;AAAA;;AAY9CK,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,MAAAA,MAAM,EAAE,KAD+B,CACzB;;AADyB,KAApC,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAG2B;AAH3B,KAIGF,IAJH,CAIQ6B,YAAY,IAAI;AACpB,UAAI,CAACA,YAAL,EAAmB,OADC,CAEpB;;AACA,UAAIC,YAAY,GAAGD,YAAY,CAACE,GAAb,CAAiB,CAACC,WAAD,EAAcC,CAAd,kBACpC;AAAQ,QAAA,KAAK,EAAED,WAAW,CAACE,OAA3B;AAAoC,QAAA,KAAK,EAAEF,WAAW,CAACE,OAAvD;AAAgE,QAAA,OAAO,EAAE,MAAM,KAAKzB,aAAL,CAAmBuB,WAAnB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADmB,CAAnB,CAHoB,CAOpB;;AACA,WAAK5B,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAEoC;AADC,OAAd;AAGD,KAfH,EAgBGzB,KAhBH,CAgBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBhB,EAFgB,CAkBoB;AACvC;;AAEDG,EAAAA,aAAa,CAACC,CAAD,EAAI;AACb,SAAKN,QAAL,CAAc;AACVmB,MAAAA,gBAAgB,EAAEb,CAAC,CAACC,MAAF,CAASC;AADjB,KAAd;AAGH;;AAUDuB,EAAAA,MAAM,GAAG;AACP,wBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,KAAK,EAAEjB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW8B,gBAA1B;AAA4C,MAAA,QAAQ,EAAE,KAAKd,aAA3D;AAA0E,MAAA,SAAS,EAAC,UAApF;AAA+F,MAAA,EAAE,EAAC,kBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEK,KAAKhB,KAAL,CAAW6B,SAFhB,CADF,eAKE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,EAAE,EAAC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADN,CAHJ,eAcI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,KAAK9B,KAAL,CAAW4C,MAAxB;AAAgC,MAAA,IAAI,EAAE,CAAtC;AAAyC,MAAA,aAAa,EAAE;AACpDC,QAAAA,GAAG,EAAE,EAD+C;AAEpDC,QAAAA,GAAG,EAAE,CAAC;AAF8C,OAAxD;AAGG,MAAA,cAAc,EAAExB,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,kBADX;AAEI,MAAA,IAAI,EAAE,kBAFV;AAGI,MAAA,QAAQ,EAAE;AAACuB,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,GAAG,EAAE,CAAC;AAAhB,OAHd;AAII,MAAA,OAAO,EAAE,KAAKX,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAUI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKY,iBAA1B;AAA6C,MAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWgC,cAAhE;AAAgF,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAW+B,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK/B,KAAL,CAAWiC,YAAX,CAAwBc,IAA7B,CADJ,CADJ,CAVJ,eAgBI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,kBADX;AAEI,MAAA,IAAI,EAAE,kBAFV;AAGI,MAAA,QAAQ,EAAE;AAACH,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,GAAG,EAAE;AAAf,OAHd;AAII,MAAA,OAAO,EAAE,KAAKX,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAsBI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKY,iBAA1B;AAA6C,MAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWgC,cAAhE;AAAgF,MAAA,OAAO,EAAE,KAAKhC,KAAL,CAAW+B,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK/B,KAAL,CAAWiC,YAAX,CAAwBc,IAA7B,CADJ,CADJ,CAtBJ,CAdJ,CADN;AA6CD;;AA7F6C;AAgGlD,eAAepD,gBAAgB,CAAC;AAC5BqD,EAAAA,MAAM,EAAG;AADmB,CAAD,CAAhB,CAEZpB,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nexport class MapPage extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      // The state maintained by this React Component. This component maintains\n        this.state = {\n            countries: [],\n            selectedCountry1: \"\",\n            selectedCountry2: \"\"\n        }\n\n    }\n\n    // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/countries\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(countryList => {\n        if (!countryList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          countries: countryList\n        })\n      })\n      .catch(err => console.log(err))   // Print the error if there is one.\n  }\n\n  handleChange1(e) {\n    this.setState({\n        selectedCountry1: e.target.value\n    });\n  }\n\n  handleChange2(e) {\n    this.setState({\n        selectedCountry2: e.target.value\n    });\n  }\n\n// render() {\n    //     return (\n    //         <div className=\"Map\">\n    //             <PageNavbar active=\"map\" />\n    //             <button id=\"submitButton\" className=\"submit-button\" onClick={this.initMap}>Submit</button>\n\n    //                 <div id=\"map\">\n    //                     <script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4uWVv0o6wzhqyPCf5H6BnRFbNfU79KqM&callback=initMap\"\n    //                         async defer>\n    //                     </script>\n    //                     <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\" />\n    //                     <script src=\"./Map.js\"></script>\n    //                 </div>\n\n    //             <body>\n    //                 <h3>Map:</h3>\n    //                 <div id=\"map\"></div>\n    //             </body>\n    //         </div>\n    //     );\n    // }\n\n}\n\n\n\n\n\nconst containerStyle = {\n    position: 'absolute',  \n    width: '60%',\n    height: '60%'\n}\n\nconst divStyle = {\n    display: 'flex',\n    alignItems: 'center'\n};\n\nexport class MapContainer extends React.Component {\n\n    state= {\n        conflicts: {},\n        selectedConflict: \"\",\n\n        displayWindow: true,\n        selectedMarker: {},\n        currentPlace: {}\n    }\n\n\n    componentDidMount() {\n        // Send an HTTP request to the server.\n        fetch(\"http://localhost:8081/conflicts\", {\n          method: 'GET' // The type of HTTP request.\n        })\n          .then(res => res.json()) // Convert the response data to a JSON.\n          .then(conflictList => {\n            if (!conflictList) return;\n            // Map each countryObj in countryList to an HTML element:       \n            let conflictDivs = conflictList.map((conflictObj, i) =>\n            <option label={conflictObj.country} value={conflictObj.country} onClick={() => this.handleChange1(conflictObj)} />\n            );\n    \n            // Set the state of the genres list to the value returned by the HTTP response from the server.\n            this.setState({\n              countries: conflictDivs\n            })\n          })\n          .catch(err => console.log(err))   // Print the error if there is one.\n    }\n    \n    handleChange1(e) {\n        this.setState({\n            selectedConflict: e.target.value\n        });\n    }\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            displayWindow: true,\n            selectedMarker: marker,\n            currentPlace: props\n        });\n    \n\n    render() {\n      return (\n            <div>\n                <PageNavbar active=\"map\"/>\n\n                <div className=\"dropdowns-container\" style={divStyle}>\n                      <div className=\"countryDropdown1-container\">\n                        <select value={this.state.selectedConflict} onChange={this.handleChange1} className=\"dropdown\" id=\"countryDropdown1\">\n                            <option select value> -- Select A Conflict -- </option>\n                            {this.state.conflicts}\n                        </select>\n                        <button className=\"submit-btn\" id=\"decadesSubmitBtn\" >Submit</button>\n                      </div>\n\n                </div>\n\n                <Map google={this.props.google} zoom={2} initialCenter={{\n                    lat: 20,\n                    lng: -10\n                }} containerStyle={containerStyle}>\n                    <Marker \n                        title={'Sample Country 1'}\n                        name={'Sample Country 1'}\n                        position={{lat: 40, lng: -90}}\n                        onClick={this.onMarkerClick} />\n            \n                    <InfoWindow onClose={this.onInfoWindowClose} marker={this.state.selectedMarker} visible={this.state.displayWindow}>\n                        <div>\n                            <h1>{this.state.currentPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n\n                    <Marker \n                        title={'Sample Country 2'}\n                        name={'Sample Country 2'}\n                        position={{lat: 52, lng: 20}}\n                        onClick={this.onMarkerClick} />\n            \n                    <InfoWindow onClose={this.onInfoWindowClose} marker={this.state.selectedMarker} visible={this.state.displayWindow}>\n                        <div>\n                            <h1>{this.state.currentPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n                </Map>\n        </div>        \n      );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyC4uWVv0o6wzhqyPCf5H6BnRFbNfU79KqM\")\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}